!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDR_REBASE	kgpu.h	21;"	d
ADDR_WITHIN	kgpu.h	17;"	d
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
KGPU_BUF_NR	kgpu.h	56;"	d
KGPU_BUF_NR_FRAMES_PER_UNIT	kkgpu.h	26;"	d
KGPU_BUF_SIZE	kgpu.h	57;"	d
KGPU_BUF_UNIT_SIZE	kkgpu.h	25;"	d
KGPU_DEV_NAME	kgpu.h	61;"	d
KGPU_IOC_GET_GPU_BUFS	kgpu.h	70;"	d
KGPU_IOC_GET_REQS	kgpu.h	73;"	d
KGPU_IOC_MAGIC	kgpu.h	66;"	d
KGPU_IOC_MAXNR	kgpu.h	75;"	d
KGPU_IOC_SET_GPU_BUFS	kgpu.h	68;"	d
KGPU_IOC_SET_STOP	kgpu.h	72;"	d
KGPU_LOG_ALERT	kgpu_log.h	16;"	d
KGPU_LOG_DEBUG	kgpu_log.h	15;"	d
KGPU_LOG_ERROR	kgpu_log.h	17;"	d
KGPU_LOG_INFO	kgpu_log.h	14;"	d
KGPU_LOG_PRINT	kgpu_log.h	18;"	d
KGPU_MMAP_SIZE	kgpu.h	59;"	d
KGPU_NO_RESPONSE	kgpu.h	41;"	d
KGPU_NO_SERVICE	kgpu.h	42;"	d
KGPU_OK	kgpu.h	40;"	d
KGPU_REQ_DONE	kgpu.h	108;"	d
KGPU_REQ_INIT	kgpu.h	103;"	d
KGPU_REQ_MEM_DONE	kgpu.h	104;"	d
KGPU_REQ_POST_EXEC	kgpu.h	107;"	d
KGPU_REQ_PREPARED	kgpu.h	105;"	d
KGPU_REQ_RUNNING	kgpu.h	106;"	d
KGPU_SERVICE_NAME_SIZE	kgpu.h	30;"	d
KGPU_TERMINATED	kgpu.h	43;"	d
LIST_HEAD	list.h	17;"	d
PAGE_SIZE	helper.h	28;"	d
SERVICE_FINIT	service.h	23;"	d
SERVICE_INIT	service.h	22;"	d
SERVICE_LIB_PREFIX	service.h	24;"	d
TO_UL	kgpu.h	15;"	d
__FILE_NAME__	kgpu_log.h	26;"	d
__FILE_NAME__	kgpu_log.h	33;"	d
__GPUTILS_H__	gputils.h	11;"	d
__HELPER_H__	helper.h	11;"	d
__KGPU_H__	kgpu.h	13;"	d
__KGPU_LOG_H__	kgpu_log.h	12;"	d
__LIST_H__	list.h	11;"	d
__SERVICE_H__	service.h	11;"	d
___KKGPU_H__	kkgpu.h	13;"	d
__kh_process_request	helper.c	/^static int __kh_process_request(int (*op)(struct _kgpu_sritem *),$/;"	f	file:
__list_add	list.h	/^static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__round_mask	helper.h	23;"	d
__unload_service	service.c	/^static int __unload_service(struct _kgpu_sitem* i)$/;"	f	file:
__unregister_service	service.c	/^static int __unregister_service(struct _kgpu_sitem *i)$/;"	f	file:
_cuda_safe_call	gputils.h	/^static cudaError_t _cuda_safe_call(cudaError_t e, const char *file, int line) {$/;"	f
_kgpu_dev	main.c	/^struct _kgpu_dev {$/;"	s	file:
_kgpu_mempool	main.c	/^struct _kgpu_mempool {$/;"	s	file:
_kgpu_request_item	main.c	/^struct _kgpu_request_item {$/;"	s	file:
_kgpu_sitem	service.c	/^struct _kgpu_sitem {$/;"	s	file:
_kgpu_sritem	helper.c	/^struct _kgpu_sritem {$/;"	s	file:
_kgpu_sync_call_data	main.c	/^struct _kgpu_sync_call_data {$/;"	s	file:
_kgpu_vma	main.c	/^struct _kgpu_vma {$/;"	s	file:
_safe_syscall	helper.c	/^int _safe_syscall(int r, const char *file, int line)$/;"	f
ad2hcpy	gputils.h	38;"	d
ah2dcpy	gputils.h	35;"	d
all_reqs	helper.c	/^LIST_HEAD(all_reqs);$/;"	v
alloc_dev_mem	gputils.h	/^static void *alloc_dev_mem(unsigned long size) {$/;"	f
alloc_sz	main.c	/^    u32           *alloc_sz;$/;"	m	struct:_kgpu_mempool	file:
alloc_sz	main.c	/^    u32 *alloc_sz;$/;"	m	struct:_kgpu_vma	file:
arch	Makefile	/^	nvcc -O2 -D__KGPU__ -c -arch=sm_20 gpuops.cu$/;"	m
arch	Makefile	/^	nvcc -link -D__KGPU__ -O2 -arch=sm_20 service.o helper.o kgpu_log_user.o gpuops.o -o helper -ldl$/;"	m
bitmap	main.c	/^    unsigned long *bitmap;$/;"	m	struct:_kgpu_mempool	file:
bitmap	main.c	/^    unsigned long *bitmap;$/;"	m	struct:_kgpu_vma	file:
block_x	kgpu.h	/^    int block_x, block_y;$/;"	m	struct:kgpu_service_request
block_y	kgpu.h	/^    int block_x, block_y;$/;"	m	struct:kgpu_service_request
callback	kgpu.h	/^    kgpu_callback callback;$/;"	m	struct:kgpu_request
cdev	main.c	/^    struct cdev cdev;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::cdev	file:
clean_vm	main.c	/^static void clean_vm(void)$/;"	f	file:
clear_gpu_mempool	main.c	/^static int clear_gpu_mempool(void)$/;"	f	file:
cls	main.c	/^    struct class *cls;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::class	file:
compute_size	service.h	/^    int (*compute_size)(struct kgpu_service_request *sreq);$/;"	m	struct:kgpu_service
container_of	list.h	65;"	d
csc	gputils.h	13;"	d
data	kgpu.h	/^    void *in, *out, *data;$/;"	m	struct:kgpu_ku_request
datasize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_ku_request
datasize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_service_request
dbg	helper.h	16;"	d
dbg	kkgpu.h	19;"	d
ddata	kgpu.h	/^    void *din, *dout, *ddata;$/;"	m	struct:kgpu_service_request
devfd	helper.c	/^static int devfd;$/;"	v	file:
devno	main.c	/^    dev_t devno;$/;"	m	struct:_kgpu_dev	file:
din	kgpu.h	/^    void *din, *dout, *ddata;$/;"	m	struct:kgpu_service_request
done	main.c	/^	int done;$/;"	m	struct:_kgpu_sync_call_data	file:
done_reqs	helper.c	/^LIST_HEAD(done_reqs);$/;"	v
dout	kgpu.h	/^    void *din, *dout, *ddata;$/;"	m	struct:kgpu_service_request
dump_gpu_bufs	main.c	/^static int dump_gpu_bufs(char __user *buf)$/;"	f	file:
dump_hex	helper.c	/^static void dump_hex(u8* p, int rs, int cs)$/;"	f	file:
end	main.c	/^    unsigned long end;$/;"	m	struct:_kgpu_vma	file:
errcode	kgpu.h	/^    int errcode;$/;"	m	struct:kgpu_ku_response
errcode	kgpu.h	/^    int errcode;$/;"	m	struct:kgpu_request
errcode	kgpu.h	/^    int errcode;$/;"	m	struct:kgpu_service_request
fill_ku_request	main.c	/^static void fill_ku_request(struct kgpu_ku_request *kureq,$/;"	f	file:
find_request	main.c	/^static struct _kgpu_request_item* find_request(int id, int offlist)$/;"	f	file:
fn_finit_service	service.h	/^typedef int (*fn_finit_service)($/;"	t
fn_init_service	service.h	/^typedef int (*fn_init_service)($/;"	t
free_dev_mem	gputils.h	/^static void free_dev_mem(void *p) {$/;"	f
glist	helper.c	/^    struct list_head glist;$/;"	m	struct:_kgpu_sritem	typeref:struct:_kgpu_sritem::list_head	file:
gmpool	main.c	/^    struct _kgpu_mempool gmpool;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::_kgpu_mempool	file:
gmpool_lock	main.c	/^    spinlock_t gmpool_lock;$/;"	m	struct:_kgpu_dev	file:
grid_x	kgpu.h	/^    int grid_x, grid_y;$/;"	m	struct:kgpu_service_request
grid_y	kgpu.h	/^    int grid_x, grid_y;$/;"	m	struct:kgpu_service_request
hdata	kgpu.h	/^    void *hin, *hout, *hdata;$/;"	m	struct:kgpu_service_request
hin	kgpu.h	/^    void *hin, *hout, *hdata;$/;"	m	struct:kgpu_service_request
hostbuf	helper.c	/^struct kgpu_gpu_mem_info hostbuf;$/;"	v	typeref:struct:kgpu_gpu_mem_info
hostvma	helper.c	/^struct kgpu_gpu_mem_info hostvma;$/;"	v	typeref:struct:kgpu_gpu_mem_info
hout	kgpu.h	/^    void *hin, *hout, *hdata;$/;"	m	struct:kgpu_service_request
id	kgpu.h	/^    int id;$/;"	m	struct:kgpu_ku_request
id	kgpu.h	/^    int id;$/;"	m	struct:kgpu_ku_response
id	kgpu.h	/^    int id;$/;"	m	struct:kgpu_request
id	kgpu.h	/^    int id;$/;"	m	struct:kgpu_service_request
in	kgpu.h	/^    void *in, *out, *data;$/;"	m	struct:kgpu_ku_request
in	kgpu.h	/^    void *in, *out, *udata, *kdata;$/;"	m	struct:kgpu_request
init_reqs	helper.c	/^LIST_HEAD(init_reqs);$/;"	v
insize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_ku_request
insize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_service_request
insize	kgpu.h	/^    unsigned long insize, outsize, udatasize, kdatasize;$/;"	m	struct:kgpu_request
kdata	kgpu.h	/^    void *in, *out, *udata, *kdata;$/;"	m	struct:kgpu_request
kdatasize	kgpu.h	/^    unsigned long insize, outsize, udatasize, kdatasize;$/;"	m	struct:kgpu_request
kgpu-objs	Makefile	/^kgpu-objs := main.o kgpu_kutils.o kgpu_log.o$/;"	m
kgpu_alloc_mmap_area	main.c	/^EXPORT_SYMBOL_GPL(kgpu_alloc_mmap_area);$/;"	v
kgpu_alloc_mmap_area	main.c	/^unsigned long kgpu_alloc_mmap_area(unsigned long size)$/;"	f
kgpu_alloc_request	main.c	/^EXPORT_SYMBOL_GPL(kgpu_alloc_request);$/;"	v
kgpu_alloc_request	main.c	/^struct kgpu_request* kgpu_alloc_request(void)$/;"	f
kgpu_call_async	main.c	/^EXPORT_SYMBOL_GPL(kgpu_call_async);$/;"	v
kgpu_call_async	main.c	/^int kgpu_call_async(struct kgpu_request *req)$/;"	f
kgpu_call_sync	main.c	/^EXPORT_SYMBOL_GPL(kgpu_call_sync);$/;"	v
kgpu_call_sync	main.c	/^int kgpu_call_sync(struct kgpu_request *req)$/;"	f
kgpu_callback	kgpu.h	/^typedef int (*kgpu_callback)(struct kgpu_request *req);$/;"	t
kgpu_cleanup	main.c	/^static void kgpu_cleanup(void)$/;"	f	file:
kgpu_do_log	kgpu_log.h	40;"	d
kgpu_free_mmap_area	main.c	/^EXPORT_SYMBOL_GPL(kgpu_free_mmap_area);$/;"	v
kgpu_free_mmap_area	main.c	/^void kgpu_free_mmap_area(unsigned long start)$/;"	f
kgpu_free_request	main.c	/^EXPORT_SYMBOL_GPL(kgpu_free_request);$/;"	v
kgpu_free_request	main.c	/^void kgpu_free_request(struct kgpu_request* req)$/;"	f
kgpu_generic_log	kgpu_log.c	/^EXPORT_SYMBOL_GPL(kgpu_generic_log);$/;"	v
kgpu_generic_log	kgpu_log.c	/^kgpu_generic_log(int level, const char *module, const char *filename,$/;"	f
kgpu_gpu_mem_info	kgpu.h	/^struct kgpu_gpu_mem_info {$/;"	s
kgpu_init	main.c	/^static int kgpu_init(void)$/;"	f	file:
kgpu_ioctl	main.c	/^static long kgpu_ioctl(struct file *filp,$/;"	f	file:
kgpu_ku_request	kgpu.h	/^struct kgpu_ku_request {$/;"	s
kgpu_ku_response	kgpu.h	/^struct kgpu_ku_response {$/;"	s
kgpu_log	kkgpu.h	18;"	d
kgpu_log_level	kgpu_log.c	/^EXPORT_SYMBOL_GPL(kgpu_log_level);$/;"	v
kgpu_log_level	kgpu_log.c	/^int kgpu_log_level = KGPU_LOG_ALERT;$/;"	v
kgpu_log_level	kgpu_log.c	/^int kgpu_log_level = __KGPU_LOG_LEVEL__;$/;"	v
kgpu_map_page	main.c	/^EXPORT_SYMBOL_GPL(kgpu_map_page);$/;"	v
kgpu_map_page	main.c	/^int kgpu_map_page(struct page *p, unsigned long addr)$/;"	f
kgpu_map_pages	main.c	/^EXPORT_SYMBOL_GPL(kgpu_map_pages);$/;"	v
kgpu_map_pages	main.c	/^void *kgpu_map_pages(struct page **pages, int n)$/;"	f
kgpu_map_pfns	main.c	/^EXPORT_SYMBOL_GPL(kgpu_map_pfns);$/;"	v
kgpu_map_pfns	main.c	/^void *kgpu_map_pfns(unsigned long *pfns, int n)$/;"	f
kgpu_mmap	main.c	/^static int kgpu_mmap(struct file *filp, struct vm_area_struct *vma)$/;"	f	file:
kgpu_next_request_id	main.c	/^EXPORT_SYMBOL_GPL(kgpu_next_request_id);$/;"	v
kgpu_next_request_id	main.c	/^int kgpu_next_request_id(void)$/;"	f
kgpu_open	main.c	/^int kgpu_open(struct inode *inode, struct file *filp)$/;"	f
kgpu_ops	main.c	/^static struct file_operations kgpu_ops =  {$/;"	v	typeref:struct:file_operations	file:
kgpu_poll	main.c	/^static unsigned int kgpu_poll(struct file *filp, poll_table *wait)$/;"	f	file:
kgpu_read	main.c	/^ssize_t kgpu_read($/;"	f
kgpu_release	main.c	/^int kgpu_release(struct inode *inode, struct file *file)$/;"	f
kgpu_request	kgpu.h	/^struct kgpu_request {$/;"	s
kgpu_request_cache	main.c	/^static struct kmem_cache *kgpu_request_cache;$/;"	v	typeref:struct:kmem_cache	file:
kgpu_request_constructor	main.c	/^static void kgpu_request_constructor(void* data)$/;"	f	file:
kgpu_request_item_cache	main.c	/^static struct kmem_cache *kgpu_request_item_cache;$/;"	v	typeref:struct:kmem_cache	file:
kgpu_request_item_constructor	main.c	/^static void kgpu_request_item_constructor(void *data)$/;"	f	file:
kgpu_service	service.h	/^struct kgpu_service {$/;"	s
kgpu_service_request	kgpu.h	/^struct kgpu_service_request {$/;"	s
kgpu_sync_call_data_cache	main.c	/^static struct kmem_cache *kgpu_sync_call_data_cache;$/;"	v	typeref:struct:kmem_cache	file:
kgpu_sync_call_data_constructor	main.c	/^static void kgpu_sync_call_data_constructor(void *data)$/;"	f	file:
kgpu_unmap_area	main.c	/^EXPORT_SYMBOL_GPL(kgpu_unmap_area);$/;"	v
kgpu_unmap_area	main.c	/^void kgpu_unmap_area(unsigned long addr)$/;"	f
kgpu_v2page	kgpu_kutils.c	/^struct page* kgpu_v2page(unsigned long v)$/;"	f
kgpu_vfree	main.c	/^EXPORT_SYMBOL_GPL(kgpu_vfree);$/;"	v
kgpu_vfree	main.c	/^void kgpu_vfree(void *p)$/;"	f
kgpu_vm_close	main.c	/^static void kgpu_vm_close(struct vm_area_struct *vma)$/;"	f	file:
kgpu_vm_fault	main.c	/^static int kgpu_vm_fault(struct vm_area_struct *vma,$/;"	f	file:
kgpu_vm_open	main.c	/^static void kgpu_vm_open(struct vm_area_struct *vma)$/;"	f	file:
kgpu_vm_ops	main.c	/^static struct vm_operations_struct kgpu_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
kgpu_vmalloc	main.c	/^EXPORT_SYMBOL_GPL(kgpu_vmalloc);$/;"	v
kgpu_vmalloc	main.c	/^void* kgpu_vmalloc(unsigned long nbytes)$/;"	f
kgpu_write	main.c	/^ssize_t kgpu_write(struct file *filp, const char __user *buf,$/;"	f
kgpudev	helper.c	/^static char *kgpudev;$/;"	v	file:
kgpudev	main.c	/^static struct _kgpu_dev kgpudev;$/;"	v	typeref:struct:_kgpu_dev	file:
kgpudev_av	main.c	/^static atomic_t kgpudev_av = ATOMIC_INIT(1);$/;"	v	file:
kh_alloc_service_request	helper.c	/^static struct _kgpu_sritem *kh_alloc_service_request()$/;"	f	file:
kh_fail_request	helper.c	/^static void kh_fail_request(struct _kgpu_sritem *sreq, int serr)$/;"	f	file:
kh_finish_post	helper.c	/^static int kh_finish_post(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_finit	helper.c	/^static int kh_finit(void)$/;"	f	file:
kh_free_service_request	helper.c	/^static void kh_free_service_request(struct _kgpu_sritem *s)$/;"	f	file:
kh_get_next_service_request	helper.c	/^static int kh_get_next_service_request(void)$/;"	f	file:
kh_init	helper.c	/^static int kh_init(void)$/;"	f	file:
kh_init_service_request	helper.c	/^static void kh_init_service_request(struct _kgpu_sritem *item,$/;"	f	file:
kh_launch_exec	helper.c	/^static int kh_launch_exec(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_load_all_services	service.c	/^int kh_load_all_services(const char *dir)$/;"	f
kh_load_service	service.c	/^int kh_load_service(const char *libpath)$/;"	f
kh_log	helper.h	15;"	d
kh_lookup_service	service.c	/^struct kgpu_service *kh_lookup_service(const char *name)$/;"	f
kh_loop_continue	helper.c	/^volatile int kh_loop_continue = 1;$/;"	v
kh_main_loop	helper.c	/^static int kh_main_loop()$/;"	f	file:
kh_post_exec	helper.c	/^static int kh_post_exec(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_prepare_exec	helper.c	/^static int kh_prepare_exec(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_register_service	service.c	/^int kh_register_service(struct kgpu_service *s, void *libhandle)$/;"	f
kh_request_alloc_mem	helper.c	/^static int kh_request_alloc_mem(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_send_response	helper.c	/^static int kh_send_response(struct kgpu_ku_response *resp)$/;"	f	file:
kh_service_done	helper.c	/^static int kh_service_done(struct _kgpu_sritem *sreq)$/;"	f	file:
kh_unload_all_services	service.c	/^int kh_unload_all_services()$/;"	f
kh_unload_service	service.c	/^int kh_unload_service(const char *name)$/;"	f
kh_unregister_service	service.c	/^int kh_unregister_service(const char *name)$/;"	f
kva	main.c	/^    unsigned long kva;$/;"	m	struct:_kgpu_mempool	file:
launch	service.h	/^    int (*launch)(struct kgpu_service_request *sreq);$/;"	m	struct:kgpu_service
libhandle	service.c	/^    void* libhandle;$/;"	m	struct:_kgpu_sitem	file:
list	helper.c	/^    struct list_head list;$/;"	m	struct:_kgpu_sritem	typeref:struct:_kgpu_sritem::list_head	file:
list	main.c	/^    struct list_head list;$/;"	m	struct:_kgpu_request_item	typeref:struct:_kgpu_request_item::list_head	file:
list	service.c	/^    struct list_head list;$/;"	m	struct:_kgpu_sitem	typeref:struct:_kgpu_sitem::list_head	file:
list_add	list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	list.h	69;"	d
list_first_entry	list.h	72;"	d
list_for_each	list.h	79;"	d
list_for_each_safe	list.h	75;"	d
list_head	list.h	/^struct list_head{$/;"	s
list_size	list.h	/^static inline int list_size(const struct list_head *head)$/;"	f
lookup_kgpu_sitem	service.c	/^static struct _kgpu_sitem *lookup_kgpu_sitem(const char *name)$/;"	f	file:
main	helper.c	/^int main(int argc, char *argv[])$/;"	f
map_page_units	main.c	/^static void* map_page_units(void *units, int n, int is_page)$/;"	f	file:
memdone_reqs	helper.c	/^LIST_HEAD(memdone_reqs);$/;"	v
mod_exit	main.c	/^module_exit(mod_exit);$/;"	v
mod_exit	main.c	/^static void __exit mod_exit(void)$/;"	f	file:
mod_init	main.c	/^module_init(mod_init);$/;"	v
mod_init	main.c	/^static int __init mod_init(void)$/;"	f	file:
name	service.h	/^    char name[KGPU_SERVICE_NAME_SIZE];$/;"	m	struct:kgpu_service
next	list.h	/^    struct list_head *prev, *next;$/;"	m	struct:list_head	typeref:struct:list_head::
npages	main.c	/^    u32 npages;$/;"	m	struct:_kgpu_mempool	file:
npages	main.c	/^    u32 npages;$/;"	m	struct:_kgpu_vma	file:
nunits	main.c	/^    u32 nunits;$/;"	m	struct:_kgpu_mempool	file:
offsetof	list.h	63;"	d
oldcallback	main.c	/^	kgpu_callback oldcallback;$/;"	m	struct:_kgpu_sync_call_data	file:
oldkdata	main.c	/^	void* oldkdata;$/;"	m	struct:_kgpu_sync_call_data	file:
out	kgpu.h	/^    void *in, *out, *data;$/;"	m	struct:kgpu_ku_request
out	kgpu.h	/^    void *in, *out, *udata, *kdata;$/;"	m	struct:kgpu_request
outsize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_ku_request
outsize	kgpu.h	/^    unsigned long insize, outsize, datasize;$/;"	m	struct:kgpu_service_request
outsize	kgpu.h	/^    unsigned long insize, outsize, udatasize, kdatasize;$/;"	m	struct:kgpu_request
pages	main.c	/^    struct page **pages;$/;"	m	struct:_kgpu_mempool	typeref:struct:_kgpu_mempool::page	file:
post	service.h	/^    int (*post)(struct kgpu_service_request *sreq);$/;"	m	struct:kgpu_service
post_exec_reqs	helper.c	/^LIST_HEAD(post_exec_reqs);$/;"	v
prepare	service.h	/^    int (*prepare)(struct kgpu_service_request *sreq);$/;"	m	struct:kgpu_service
prepared_reqs	helper.c	/^LIST_HEAD(prepared_reqs);$/;"	v
prev	list.h	/^    struct list_head *prev, *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
printk	kgpu_log.c	17;"	d	file:
queue	main.c	/^	wait_queue_head_t queue;$/;"	m	struct:_kgpu_sync_call_data	file:
r	main.c	/^    struct kgpu_request *r;$/;"	m	struct:_kgpu_request_item	typeref:struct:_kgpu_request_item::kgpu_request	file:
reqlock	main.c	/^    spinlock_t reqlock;$/;"	m	struct:_kgpu_dev	file:
reqq	main.c	/^    wait_queue_head_t reqq;$/;"	m	struct:_kgpu_dev	file:
reqs	main.c	/^    struct list_head reqs;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::list_head	file:
rid_sequence	main.c	/^    int rid_sequence;$/;"	m	struct:_kgpu_dev	file:
ridlock	main.c	/^    spinlock_t ridlock;$/;"	m	struct:_kgpu_dev	file:
round_down	helper.h	25;"	d
round_up	helper.h	24;"	d
rtdreqlock	main.c	/^    spinlock_t rtdreqlock;$/;"	m	struct:_kgpu_dev	file:
rtdreqs	main.c	/^    struct list_head rtdreqs;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::list_head	file:
running_reqs	helper.c	/^LIST_HEAD(running_reqs);$/;"	v
s	kgpu.h	/^    struct kgpu_service *s;$/;"	m	struct:kgpu_service_request	typeref:struct:kgpu_service_request::kgpu_service
s	service.c	/^    struct kgpu_service *s;$/;"	m	struct:_kgpu_sitem	typeref:struct:_kgpu_sitem::kgpu_service	file:
service_lib_dir	helper.c	/^static char *service_lib_dir;$/;"	v	file:
service_name	kgpu.h	/^    char service_name[KGPU_SERVICE_NAME_SIZE];$/;"	m	struct:kgpu_ku_request
service_name	kgpu.h	/^    char service_name[KGPU_SERVICE_NAME_SIZE];$/;"	m	struct:kgpu_request
services	service.c	/^LIST_HEAD(services);$/;"	v
set_gpu_mempool	main.c	/^static int set_gpu_mempool(char __user *buf)$/;"	f	file:
set_vm	main.c	/^static void set_vm(struct vm_area_struct *vma)$/;"	f	file:
sid	service.h	/^    int sid;$/;"	m	struct:kgpu_service
size	kgpu.h	/^    unsigned long size;$/;"	m	struct:kgpu_gpu_mem_info
sr	helper.c	/^    struct kgpu_service_request sr;$/;"	m	struct:_kgpu_sritem	typeref:struct:_kgpu_sritem::kgpu_service_request	file:
ssc	helper.c	51;"	d	file:
start	main.c	/^    unsigned long start;$/;"	m	struct:_kgpu_vma	file:
state	kgpu.h	/^    int state;$/;"	m	struct:kgpu_service_request
state	main.c	/^    int state;$/;"	m	struct:_kgpu_dev	file:
stream	kgpu.h	/^    unsigned long stream;$/;"	m	struct:kgpu_service_request
stream_id	kgpu.h	/^    int stream_id;$/;"	m	struct:kgpu_service_request
sync_callback	main.c	/^static int sync_callback(struct kgpu_request *req)$/;"	f	file:
terminate_all_requests	main.c	/^static int terminate_all_requests(void)$/;"	f	file:
u8	helper.c	/^typedef unsigned char u8;$/;"	t	file:
udata	kgpu.h	/^    void *in, *out, *udata, *kdata;$/;"	m	struct:kgpu_request
udatasize	kgpu.h	/^    unsigned long insize, outsize, udatasize, kdatasize;$/;"	m	struct:kgpu_request
uva	kgpu.h	/^    void *uva;$/;"	m	struct:kgpu_gpu_mem_info
uva	main.c	/^    unsigned long uva;$/;"	m	struct:_kgpu_mempool	file:
vm	main.c	/^    struct _kgpu_vma vm;$/;"	m	struct:_kgpu_dev	typeref:struct:_kgpu_dev::_kgpu_vma	file:
vm_lock	main.c	/^    spinlock_t vm_lock;$/;"	m	struct:_kgpu_dev	file:
vma	main.c	/^    struct vm_area_struct *vma;$/;"	m	struct:_kgpu_vma	typeref:struct:_kgpu_vma::vm_area_struct	file:
vprintk	kgpu_log.c	18;"	d	file:
